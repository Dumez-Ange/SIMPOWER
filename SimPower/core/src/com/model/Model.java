package com.model;

import java.util.ArrayList;

import com.GameConstant.GUIConstants;
import com.GameConstant.ModelConstants;
import com.model.people.People;
import com.model.structure.Structure;


/**
 * @brief this is the main game class
 * @author ang3d
 *
 */
public class Model {
	
	private Weather weather;
	
	private float money;
	private float pollution;
	private float production;
	private float energyUsed;
	private int people;
	private int satisfaction;
	
	private int nbPower;
	private int nbHousing;
	
	private int[][] map;
	
	private ArrayList<People> PeopleList;
	private ArrayList<Structure> StructureList;
	
	//constructor
	public Model() {
		
		this.weather = new Weather();
		
		this.money = ModelConstants.INITIALISATION_MONEY;
		this.pollution = ModelConstants.INITIALISATION_POLLUTION;
		this.satisfaction = ModelConstants.INITIALISATION_SATISFACTION;
		this.production = ModelConstants.INITIALISATION_PRODUCTION;
		this.energyUsed = ModelConstants.INITIALISATION_ENERGY;
		this.people = ModelConstants.INITIALISATION_PEOPLE;
		
		this.map = new int[GUIConstants.TILEMAP_ROWS][GUIConstants.TILEMAP_COLS];
		
		this.initMap();
		
		this.nbHousing = 0;
		this.nbPower = 0;
		
		PeopleList = new ArrayList<People>();
		StructureList = new ArrayList<Structure>();
		
	}
	
	//**********************************************
	//Public methods
	//**********************************************
	
	//this is used to initialized the 2D table (obstruction map if the cell = 1 means it is occupied by a structure 0 it is free place )
	private void initMap() {
		
		
		for(int row = 0 ; row < 10 ; row++) {
			for(int col = 0 ; col < 10; col++) {
				
				
				map[row][col] = 0;
				
			}
		}
	}
	
	//method to search in the Structure array the structure which position matches the x and y given in parameters
	public int search(int x, int y) {
		
		int index = -1;
		for (Structure s : StructureList) {
			index += 1;
			if(s.getX() == x && s.getY() == y) {
				return index;
			}
		}
		index = -1;
		
		return index;
	}
	
	//method to search in the Structure array the structure which name matches the String given in parameters
	public int search(String name) {
		
		int index = -1;
		for (Structure s : StructureList) {
			index += 1;
			if(s.getName() == name) {
				return index;
			}
		}
		index = -1;
		
		return index;
	}
	
	
	//method to update the money of the player
	public void updateMoney() {
		
		this.money += this.production - this.energyUsed;
		
	}
	
	//method to update the general satisfaction which is equal to the average satisfaction of all the workers 
	public void updateSatis() {
		
		int total = 0;
		int size = 0;
		for(People p : PeopleList) {
			p.SatisUpdate(this);
			total += p.getSatisfaction();
			size++;
		}
		if(size > 0) {
			total /= size;
			this.satisfaction = total;
		}
		
	}
	
	//method to update the general production which is equal to the sum of all Structure production 
	public void updateProd() {
		
		float total = 0;
		for(Structure s : StructureList) {
			
			total += s.getProd(this);
			
		}
		
		this.production = (float) (total * (this.satisfaction * 0.01));
		
	}
	
	//method to update the general energy which is equal to the sum of all the energy used by the Structure 
	public void updateEnergy() {
		
		float total = 0;
		for(Structure s : StructureList) {
			
			total += s.getEnergy();
			
		}
		
		this.energyUsed = total;
		
	}
	
	//method to update the pollution which is equal to the sum of all the pollution generated by all the structures 
	public void updatePollution() {
		
		float total = 0;
		for(Structure s : StructureList) {
			
			total += s.getPollution();
			
		}
		
		this.pollution = total;
	}
	//method to update the global number of workers
	public void updatePeople() {
		this.people = this.PeopleList.size();
	}
	
	
	//******************************************
	// Getters and setters
	//******************************************
	
	public int getnbPower() {
		return this.nbPower;
	}
	
	public int getnbHousing() {
		return this.nbHousing;
	}
	
	public float getMoney() {
		return this.money;
	}
	
	public float getSatisfaction() {
		return this.satisfaction;
	}
	
	public float getProduction() {
		return this.production;
	}
	
	public int getPeople() {
		return this.people;
	}
	
	public float getPollution() {
		return this.pollution;
	}
	
	public float getEnergyUsed() {
		return this.energyUsed;
	}
	
	public Weather getWeather() {
		return this.weather;
	}
	
	public ArrayList<People> getPeopleList(){
		return this.PeopleList;
	}
	
	public ArrayList<Structure> getStructureList(){
		return this.StructureList;
	}
	
	public int[][] getMap(){
		return this.map;
	}
	
	public void setnbPower(int nb) {
		this.nbPower += nb;
	}
	
	public void setnbHousing(int nb) {
		this.nbHousing += nb;
	}
	
	public void setMoney(float cash) {
		this.money += cash;
	}
	
	public void setProduction(float prod) {
		this.production += prod;
	}
	
	public void setPeople(int people) {
		this.people += people;
	}
	
	public void setPollution(float pollution) {
		this.money += pollution;
	}
	
	public void setEneryUsed(float energy) {
		this.money += energy;
	}
	
	public void setSatisfaction(float satis) {
		if((this.satisfaction += satis) > 100) {
			this.satisfaction = 100;
		}else if ((this.satisfaction -= satis) < 0 ) {
			this.satisfaction = 0;
		}
	}
}
